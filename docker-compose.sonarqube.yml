services:
  postgres-sonarqube:
    container_name: postgres-sonarqube
    image: postgres:alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sonarqube
      - PGDATA=/data/postgres
    ports:
      - "5437:5437"
    volumes:
      - ./postgres-sonarqube:/data/postgres
    command: -p 5437
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5437" ]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - sonarqube
    restart: always

  sonarqube:
    container_name: sonarqube
    image: sonarqube:lts
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://postgres-sonarqube:5437/sonarqube
      - SONAR_JDBC_USERNAME=postgres
      - SONAR_JDBC_PASSWORD=postgres
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
      - SONAR_WEB_JAVA_OPTS=-Xmx512m
    ports:
      - "9000:9000"
    volumes:
      - ./sonarqube/data:/opt/sonarqube/data
      - ./sonarqube/logs:/opt/sonarqube/logs
      - ./sonarqube/extensions:/opt/sonarqube/extensions
    networks:
      - sonarqube
    depends_on:
      postgres-sonarqube:
        condition: service_healthy

networks:
  sonarqube: